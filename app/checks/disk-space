#!/usr/bin/python3

"""
This script checks if there is enough free space on a mountpoint. Usage:
./disk-space.py DIR MIN_REQ_SPACE[kMGT]
accepted units are kibibytes - k, mebibytes - M etc. up to tebibytes. leave blank for plain byte value.
"""
import os
from sys import argv,stderr
if len(argv) != 3:
    print("Too many or too few arguments.\nUsage: ./disk-space.py DIR MIN_REQ_SPACE[kMGT]", file=stderr)
    exit(127)

def check(mntpoint, req_space):
    unit="b"
    if req_space[-1] in "kMGT":
        unit = req_space[-1]
        req_space = int(req_space[:-1])
    else:
        req_space = int(req_space)

    statvfs = os.statvfs(mntpoint)
    free_space = statvfs.f_frsize * statvfs.f_bavail # block size * avail blocks
    if unit == "k":
        free_space /= 1024.
    elif unit == "M":
        free_space /= 1024. ** 2
    elif unit == "G":
        free_space /= 1024. ** 3
    elif unit == "T":
        free_space /= 1024. ** 4

    if free_space >= req_space:
        print("There is {0:.1f}{1} disk space at {2}, nothing to worry about, defined minimum is {3}{1}".format(free_space, unit, mntpoint, req_space))
        return 0
    else:
        print("Failed asserting that {0:.1f}{1} is at least {2}{1} at {3}".format(free_space, unit, req_space, mntpoint))
        return 1

exit(check(argv[1], argv[2]))
